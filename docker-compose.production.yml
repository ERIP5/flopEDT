version: '3.8'

services:

  memcached:
    image: memcached

  db:
    restart: always
    image: postgres
    env_file:
      - ./docker/env/db.env
      - ./docker/env/db.prod.env
    volumes:
      - db-data:/var/lib/postgresql/data
      - db-backup:/backup
    deploy:
      resources:
        limits:
          cpus: '0.50'

  nginx:
    restart: always
    image: "nginx"
    ports:
      - "${PORT-80}:80"
    volumes:
      - ./docker/nginx/templates:/etc/nginx/templates
      - static-volume:/static
      - certificates:/etc/ssl/fedt
    env_file:
      - ./docker/env/global.env
    environment:
      - NGINX_PORT=80
    depends_on:
      - web

  redis:
    image: redis:latest
 
  web:
    restart: always
    image:  localhost:5000/${COMPOSE_PROJECT_NAME:-edt_pro_web}
    build: 
      context: .
      args:
        CONFIG: production
    env_file:
      - ./docker/env/db.env
      - ./docker/env/db.prod.env      
      - ./docker/env/web.env
      - ./docker/env/web.prod.env
    environment:
      - DJANGO_SETTINGS_MODULE=FlOpEDT.settings.production
      - START_SERVER=${START_SERVER:-on}
      - DJANGO_LOADDATA
      - CONFIG=production
    volumes:
      - static-volume:/code/FlOpEDT/var/static
      - media-volume:/code/FlOpEDT/media
      - .:/code
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      memcached:
        condition: service_started
      vue:
        condition: service_completed_successfully
    entrypoint: /code/docker/script/init.sh

  vue:
    build:
      dockerfile: ./Dockerfile-Vue
    user: "${UID}:${GID}"
    environment:
      - YARN=build
    volumes:
      - ./FlOpEDT:/code/FlOpEDT/

  certif-create:
    image: zerossl/client
    user: "${UID}:${GID}"
    volumes:
      - certificates:/data
      - ./FlOpEDT/acme_challenge/token:/webroot
    command: --key account.key --csr ${FLOP_HOST}.csr --csr-key ${FLOP_HOST}.key --crt ${FLOP_HOST}.crt --domains "${FLOP_HOST}" --generate-missing --path /webroot --unlink

volumes:
  media-volume:
  static-volume:
  db-data:
  db-backup:
  certificates:
